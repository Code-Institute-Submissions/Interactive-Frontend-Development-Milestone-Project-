{"filter":false,"title":"script.js","tooltip":"/script.js","undoManager":{"mark":53,"position":53,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["c"],"id":1},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["o"]},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["n"]},{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["s"]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":4},"action":"remove","lines":["cons"],"id":2},{"start":{"row":0,"column":0},"end":{"row":0,"column":7},"action":"insert","lines":["console"]}],[{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["."],"id":3},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["l"]},{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["o"]}],[{"start":{"row":0,"column":8},"end":{"row":0,"column":10},"action":"remove","lines":["lo"],"id":4},{"start":{"row":0,"column":8},"end":{"row":0,"column":13},"action":"insert","lines":["log()"]}],[{"start":{"row":0,"column":12},"end":{"row":0,"column":14},"action":"insert","lines":["\"\""],"id":5}],[{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":["H"],"id":6},{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":["e"]},{"start":{"row":0,"column":15},"end":{"row":0,"column":16},"action":"insert","lines":["l"]},{"start":{"row":0,"column":16},"end":{"row":0,"column":17},"action":"insert","lines":["l"]},{"start":{"row":0,"column":17},"end":{"row":0,"column":18},"action":"insert","lines":["o"]}],[{"start":{"row":0,"column":18},"end":{"row":0,"column":19},"action":"insert","lines":[" "],"id":7},{"start":{"row":0,"column":19},"end":{"row":0,"column":20},"action":"insert","lines":["w"]},{"start":{"row":0,"column":20},"end":{"row":0,"column":21},"action":"insert","lines":["o"]},{"start":{"row":0,"column":21},"end":{"row":0,"column":22},"action":"insert","lines":["r"]},{"start":{"row":0,"column":22},"end":{"row":0,"column":23},"action":"insert","lines":["l"]},{"start":{"row":0,"column":23},"end":{"row":0,"column":24},"action":"insert","lines":["d"]},{"start":{"row":0,"column":24},"end":{"row":0,"column":25},"action":"insert","lines":["!"]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":27},"action":"remove","lines":["console.log(\"Hello world!\")"],"id":8},{"start":{"row":0,"column":0},"end":{"row":19,"column":9},"action":"insert","lines":["<script>","    /* Note: This example requires that you consent to location sharing when","     * prompted by your browser. If you see the error \"Geolocation permission","     * denied.\", it means you probably did not give permission for the browser * to locate you. */","","    /* TODO: Step 2, Geolocate your user","     * Replace the code from here to the END TODO comment with new code from","     * codelab instructions. */","    let pos;","    let map;","    function initMap() {","        // Set the default location and initialize all variables","        pos = {lat: -33.857, lng: 151.213};","        map = new google.maps.Map(document.getElementById('map'), {","            center: pos,","            zoom: 15","        });","    }","    /* END TODO: Step 2, Geolocate your user */","</script>"]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":8},"action":"remove","lines":["<script>"],"id":9}],[{"start":{"row":19,"column":0},"end":{"row":19,"column":9},"action":"remove","lines":["</script>"],"id":10}],[{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["",""],"id":11}],[{"start":{"row":17,"column":5},"end":{"row":18,"column":0},"action":"insert","lines":["",""],"id":30},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]},{"start":{"row":18,"column":4},"end":{"row":19,"column":0},"action":"insert","lines":["",""]},{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":16,"column":11},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":32},{"start":{"row":17,"column":0},"end":{"row":17,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":23,"column":0},"end":{"row":86,"column":51},"action":"insert","lines":["let pos;","let map;","let bounds;","let infoWindow;","let currentInfoWindow;","let service;","let infoPane;","function initMap() {","    // Initialize variables","    bounds = new google.maps.LatLngBounds();","    infoWindow = new google.maps.InfoWindow;","    currentInfoWindow = infoWindow;","    /* TODO: Step 4A3: Add a generic sidebar */","","    // Try HTML5 geolocation","    if (navigator.geolocation) {","    navigator.geolocation.getCurrentPosition(position => {","        pos = {","        lat: position.coords.latitude,","        lng: position.coords.longitude","        };","        map = new google.maps.Map(document.getElementById('map'), {","        center: pos,","        zoom: 15","        });","        bounds.extend(pos);","","        infoWindow.setPosition(pos);","        infoWindow.setContent('Location found.');","        infoWindow.open(map);","        map.setCenter(pos);","","        /* TODO: Step 3B2, Call the Places Nearby Search */","    }, () => {","        // Browser supports geolocation, but user has denied permission","        handleLocationError(true, infoWindow);","    });","    } else {","    // Browser doesn't support geolocation","    handleLocationError(false, infoWindow);","    }","}","","// Handle a geolocation error","function handleLocationError(browserHasGeolocation, infoWindow) {","    // Set default location to Sydney, Australia","    pos = {lat: -33.856, lng: 151.215};","    map = new google.maps.Map(document.getElementById('map'), {","    center: pos,","    zoom: 15","    });","","    // Display an InfoWindow at the map center","    infoWindow.setPosition(pos);","    infoWindow.setContent(browserHasGeolocation ?","    'Geolocation permissions denied. Using default location.' :","    'Error: Your browser doesn\\'t support geolocation.');","    infoWindow.open(map);","    currentInfoWindow = infoWindow;","","    /* TODO: Step 3B3, Call the Places Nearby Search */","}","/* END TODO: Step 2, Geolocate your user */","/* TODO: Step 3B1, Call the Places Nearby Search */"],"id":34}],[{"start":{"row":23,"column":0},"end":{"row":86,"column":51},"action":"remove","lines":["let pos;","let map;","let bounds;","let infoWindow;","let currentInfoWindow;","let service;","let infoPane;","function initMap() {","    // Initialize variables","    bounds = new google.maps.LatLngBounds();","    infoWindow = new google.maps.InfoWindow;","    currentInfoWindow = infoWindow;","    /* TODO: Step 4A3: Add a generic sidebar */","","    // Try HTML5 geolocation","    if (navigator.geolocation) {","    navigator.geolocation.getCurrentPosition(position => {","        pos = {","        lat: position.coords.latitude,","        lng: position.coords.longitude","        };","        map = new google.maps.Map(document.getElementById('map'), {","        center: pos,","        zoom: 15","        });","        bounds.extend(pos);","","        infoWindow.setPosition(pos);","        infoWindow.setContent('Location found.');","        infoWindow.open(map);","        map.setCenter(pos);","","        /* TODO: Step 3B2, Call the Places Nearby Search */","    }, () => {","        // Browser supports geolocation, but user has denied permission","        handleLocationError(true, infoWindow);","    });","    } else {","    // Browser doesn't support geolocation","    handleLocationError(false, infoWindow);","    }","}","","// Handle a geolocation error","function handleLocationError(browserHasGeolocation, infoWindow) {","    // Set default location to Sydney, Australia","    pos = {lat: -33.856, lng: 151.215};","    map = new google.maps.Map(document.getElementById('map'), {","    center: pos,","    zoom: 15","    });","","    // Display an InfoWindow at the map center","    infoWindow.setPosition(pos);","    infoWindow.setContent(browserHasGeolocation ?","    'Geolocation permissions denied. Using default location.' :","    'Error: Your browser doesn\\'t support geolocation.');","    infoWindow.open(map);","    currentInfoWindow = infoWindow;","","    /* TODO: Step 3B3, Call the Places Nearby Search */","}","/* END TODO: Step 2, Geolocate your user */","/* TODO: Step 3B1, Call the Places Nearby Search */"],"id":37}],[{"start":{"row":0,"column":0},"end":{"row":23,"column":0},"action":"remove","lines":["","    /* Note: This example requires that you consent to location sharing when","     * prompted by your browser. If you see the error \"Geolocation permission","     * denied.\", it means you probably did not give permission for the browser * to locate you. */","","    /* TODO: Step 2, Geolocate your user","     * Replace the code from here to the END TODO comment with new code from","     * codelab instructions. */","    let pos;","    let map;","    function initMap() {","        // Set the default location and initialize all variables","        pos = {lat: -33.857, lng: 151.213};","        map = new google.maps.Map(document.getElementById('map'), {","            center: pos,","            zoom: 15","        });","        ","    }","    ","    ","    /* END TODO: Step 2, Geolocate your user */","",""],"id":38},{"start":{"row":0,"column":0},"end":{"row":63,"column":51},"action":"insert","lines":["let pos;","let map;","let bounds;","let infoWindow;","let currentInfoWindow;","let service;","let infoPane;","function initMap() {","    // Initialize variables","    bounds = new google.maps.LatLngBounds();","    infoWindow = new google.maps.InfoWindow;","    currentInfoWindow = infoWindow;","    /* TODO: Step 4A3: Add a generic sidebar */","","    // Try HTML5 geolocation","    if (navigator.geolocation) {","    navigator.geolocation.getCurrentPosition(position => {","        pos = {","        lat: position.coords.latitude,","        lng: position.coords.longitude","        };","        map = new google.maps.Map(document.getElementById('map'), {","        center: pos,","        zoom: 15","        });","        bounds.extend(pos);","","        infoWindow.setPosition(pos);","        infoWindow.setContent('Location found.');","        infoWindow.open(map);","        map.setCenter(pos);","","        /* TODO: Step 3B2, Call the Places Nearby Search */","    }, () => {","        // Browser supports geolocation, but user has denied permission","        handleLocationError(true, infoWindow);","    });","    } else {","    // Browser doesn't support geolocation","    handleLocationError(false, infoWindow);","    }","}","","// Handle a geolocation error","function handleLocationError(browserHasGeolocation, infoWindow) {","    // Set default location to Sydney, Australia","    pos = {lat: -33.856, lng: 151.215};","    map = new google.maps.Map(document.getElementById('map'), {","    center: pos,","    zoom: 15","    });","","    // Display an InfoWindow at the map center","    infoWindow.setPosition(pos);","    infoWindow.setContent(browserHasGeolocation ?","    'Geolocation permissions denied. Using default location.' :","    'Error: Your browser doesn\\'t support geolocation.');","    infoWindow.open(map);","    currentInfoWindow = infoWindow;","","    /* TODO: Step 3B3, Call the Places Nearby Search */","}","/* END TODO: Step 2, Geolocate your user */","/* TODO: Step 3B1, Call the Places Nearby Search */"]}],[{"start":{"row":63,"column":0},"end":{"row":63,"column":51},"action":"remove","lines":["/* TODO: Step 3B1, Call the Places Nearby Search */"],"id":39}],[{"start":{"row":0,"column":0},"end":{"row":63,"column":0},"action":"remove","lines":["let pos;","let map;","let bounds;","let infoWindow;","let currentInfoWindow;","let service;","let infoPane;","function initMap() {","    // Initialize variables","    bounds = new google.maps.LatLngBounds();","    infoWindow = new google.maps.InfoWindow;","    currentInfoWindow = infoWindow;","    /* TODO: Step 4A3: Add a generic sidebar */","","    // Try HTML5 geolocation","    if (navigator.geolocation) {","    navigator.geolocation.getCurrentPosition(position => {","        pos = {","        lat: position.coords.latitude,","        lng: position.coords.longitude","        };","        map = new google.maps.Map(document.getElementById('map'), {","        center: pos,","        zoom: 15","        });","        bounds.extend(pos);","","        infoWindow.setPosition(pos);","        infoWindow.setContent('Location found.');","        infoWindow.open(map);","        map.setCenter(pos);","","        /* TODO: Step 3B2, Call the Places Nearby Search */","    }, () => {","        // Browser supports geolocation, but user has denied permission","        handleLocationError(true, infoWindow);","    });","    } else {","    // Browser doesn't support geolocation","    handleLocationError(false, infoWindow);","    }","}","","// Handle a geolocation error","function handleLocationError(browserHasGeolocation, infoWindow) {","    // Set default location to Sydney, Australia","    pos = {lat: -33.856, lng: 151.215};","    map = new google.maps.Map(document.getElementById('map'), {","    center: pos,","    zoom: 15","    });","","    // Display an InfoWindow at the map center","    infoWindow.setPosition(pos);","    infoWindow.setContent(browserHasGeolocation ?","    'Geolocation permissions denied. Using default location.' :","    'Error: Your browser doesn\\'t support geolocation.');","    infoWindow.open(map);","    currentInfoWindow = infoWindow;","","    /* TODO: Step 3B3, Call the Places Nearby Search */","}","/* END TODO: Step 2, Geolocate your user */",""],"id":40}],[{"start":{"row":0,"column":0},"end":{"row":66,"column":43},"action":"insert","lines":["let pos;","let map;","let bounds;","let infoWindow;","let currentInfoWindow;","let service;","let infoPane;","","function initMap() {","    // Initialize variables","    bounds = new google.maps.LatLngBounds();","    infoWindow = new google.maps.InfoWindow;","    currentInfoWindow = infoWindow;","    /* TODO: Step 4A3: Add a generic sidebar */","","    // Try HTML5 geolocation","    if (navigator.geolocation) {","        navigator.geolocation.getCurrentPosition(position => {","            pos = {","                lat: position.coords.latitude,","                lng: position.coords.longitude","            };","            map = new google.maps.Map(document.getElementById('map'), {","                center: pos,","                zoom: 15","            });","            bounds.extend(pos);","","            infoWindow.setPosition(pos);","            infoWindow.setContent('Location found.');","            infoWindow.open(map);","            map.setCenter(pos);","","            /* TODO: Step 3B2, Call the Places Nearby Search */","        }, () => {","            // Browser supports geolocation, but user has denied permission","            handleLocationError(true, infoWindow);","        });","    } else {","        // Browser doesn't support geolocation","        handleLocationError(false, infoWindow);","    }","}","","// Handle a geolocation error","function handleLocationError(browserHasGeolocation, infoWindow) {","    // Set default location to Sydney, Australia","    pos = {","        lat: -33.856,","        lng: 151.215","    };","    map = new google.maps.Map(document.getElementById('map'), {","        center: pos,","        zoom: 15","    });","","    // Display an InfoWindow at the map center","    infoWindow.setPosition(pos);","    infoWindow.setContent(browserHasGeolocation ?","        'Geolocation permissions denied. Using default location.' :","        'Error: Your browser doesn\\'t support geolocation.');","    infoWindow.open(map);","    currentInfoWindow = infoWindow;","","    /* TODO: Step 3B3, Call the Places Nearby Search */","}","/* END TODO: Step 2, Geolocate your user */"],"id":41}],[{"start":{"row":66,"column":43},"end":{"row":67,"column":0},"action":"insert","lines":["",""],"id":42},{"start":{"row":67,"column":0},"end":{"row":68,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":68,"column":0},"end":{"row":87,"column":56},"action":"insert","lines":["// Perform a Places Nearby Search Request","function getNearbyPlaces(position) {","    let request = {","    location: position,","    rankBy: google.maps.places.RankBy.DISTANCE,","    keyword: 'sushi'","    };","","    service = new google.maps.places.PlacesService(map);","    service.nearbySearch(request, nearbyCallback);","}","","// Handle the results (up to 20) of the Nearby Search","function nearbyCallback(results, status) {","    if (status == google.maps.places.PlacesServiceStatus.OK) {","    createMarkers(results);","    }","}","","/* TODO: Step 3C, Generate markers for search results */"],"id":43}],[{"start":{"row":73,"column":14},"end":{"row":73,"column":19},"action":"remove","lines":["sushi"],"id":44},{"start":{"row":73,"column":14},"end":{"row":73,"column":15},"action":"insert","lines":["g"]},{"start":{"row":73,"column":15},"end":{"row":73,"column":16},"action":"insert","lines":["y"]},{"start":{"row":73,"column":16},"end":{"row":73,"column":17},"action":"insert","lines":["m"]}],[{"start":{"row":12,"column":0},"end":{"row":13,"column":0},"action":"remove","lines":["    currentInfoWindow = infoWindow;",""],"id":45}],[{"start":{"row":32,"column":63},"end":{"row":33,"column":0},"action":"insert","lines":["",""],"id":47},{"start":{"row":33,"column":0},"end":{"row":33,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":33,"column":12},"end":{"row":35,"column":21},"action":"insert","lines":["/* TODO: Step 3B2, Call the Places Nearby Search */","// Call Places Nearby Search on user's location","getNearbyPlaces(pos);"],"id":48}],[{"start":{"row":35,"column":21},"end":{"row":36,"column":0},"action":"insert","lines":["",""],"id":49}],[{"start":{"row":32,"column":0},"end":{"row":32,"column":63},"action":"remove","lines":["            /* TODO: Step 3B2, Call the Places Nearby Search */"],"id":50},{"start":{"row":31,"column":0},"end":{"row":32,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":66,"column":55},"end":{"row":67,"column":0},"action":"insert","lines":["",""],"id":51},{"start":{"row":67,"column":0},"end":{"row":67,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":67,"column":4},"end":{"row":68,"column":21},"action":"insert","lines":["// Call Places Nearby Search on the default location","getNearbyPlaces(pos);"],"id":52}],[{"start":{"row":91,"column":56},"end":{"row":92,"column":0},"action":"insert","lines":["",""],"id":53},{"start":{"row":92,"column":0},"end":{"row":93,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":92,"column":0},"end":{"row":93,"column":0},"action":"remove","lines":["",""],"id":54}],[{"start":{"row":92,"column":0},"end":{"row":111,"column":57},"action":"insert","lines":["// Set markers at the location of each place result","function createMarkers(places) {","    places.forEach(place => {","    let marker = new google.maps.Marker({","        position: place.geometry.location,","        map: map,","        title: place.name","    });","","    /* TODO: Step 4B: Add click listeners to the markers */","","    // Adjust the map bounds to include the location of this marker","    bounds.extend(place.geometry.location);","    });","    /* Once all the markers have been placed, adjust the bounds of the map to","    * show all the markers within the visible area. */","    map.fitBounds(bounds);","}","","/* TODO: Step 4C: Show place details in an info window */"],"id":55}],[{"start":{"row":12,"column":47},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":56},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":48},"action":"insert","lines":["infoPane = document.getElementById('panel');"],"id":57}],[{"start":{"row":102,"column":59},"end":{"row":103,"column":0},"action":"insert","lines":["",""],"id":58},{"start":{"row":103,"column":0},"end":{"row":103,"column":4},"action":"insert","lines":["    "]},{"start":{"row":103,"column":4},"end":{"row":104,"column":0},"action":"insert","lines":["",""]},{"start":{"row":104,"column":0},"end":{"row":104,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":104,"column":4},"end":{"row":118,"column":3},"action":"insert","lines":["// Add click listener to each marker","google.maps.event.addListener(marker, 'click', () => {","    let request = {","    placeId: place.place_id,","    fields: ['name', 'formatted_address', 'geometry', 'rating',","        'website', 'photos']","    };","","    /* Only fetch the details of a place when the user clicks on a marker.","    * If we fetch the details for all place results as soon as we get","    * the search response, we will hit API rate limits. */","    service.getDetails(request, (placeResult, status) => {","    showDetails(placeResult, marker, status)","    });","});"],"id":59}],[{"start":{"row":128,"column":57},"end":{"row":129,"column":0},"action":"insert","lines":["",""],"id":60}],[{"start":{"row":129,"column":0},"end":{"row":144,"column":52},"action":"insert","lines":["// Builds an InfoWindow to display details above the marker","function showDetails(placeResult, marker, status) {","    if (status == google.maps.places.PlacesServiceStatus.OK) {","    let placeInfowindow = new google.maps.InfoWindow();","    placeInfowindow.setContent('<div><strong>' + placeResult.name +","        '</strong><br>' + 'Rating: ' + placeResult.rating + '</div>');","    placeInfowindow.open(marker.map, marker);","    currentInfoWindow.close();","    currentInfoWindow = placeInfowindow;","    showPanel(placeResult);","    } else {","    console.log('showDetails failed: ' + status);","    }","}","","/* TODO: Step 4D: Load place details in a sidebar */"],"id":61}],[{"start":{"row":144,"column":52},"end":{"row":145,"column":0},"action":"insert","lines":["",""],"id":62}],[{"start":{"row":145,"column":0},"end":{"row":187,"column":1},"action":"insert","lines":["// Displays place details in a sidebar","function showPanel(placeResult) {","    // If infoPane is already open, close it","    if (infoPane.classList.contains(\"open\")) {","    infoPane.classList.remove(\"open\");","    }","","    // Clear the previous details","    while (infoPane.lastChild) {","    infoPane.removeChild(infoPane.lastChild);","    }","","    /* TODO: Step 4E: Display a Place Photo with the Place Details */","","    // Add place details with text formatting","    let name = document.createElement('h1');","    name.classList.add('place');","    name.textContent = placeResult.name;","    infoPane.appendChild(name);","    if (placeResult.rating != null) {","    let rating = document.createElement('p');","    rating.classList.add('details');","    rating.textContent = `Rating: ${placeResult.rating} \\u272e`;","    infoPane.appendChild(rating);","    }","    let address = document.createElement('p');","    address.classList.add('details');","    address.textContent = placeResult.formatted_address;","    infoPane.appendChild(address);","    if (placeResult.website) {","    let websitePara = document.createElement('p');","    let websiteLink = document.createElement('a');","    let websiteUrl = document.createTextNode(placeResult.website);","    websiteLink.appendChild(websiteUrl);","    websiteLink.title = placeResult.website;","    websiteLink.href = placeResult.website;","    websitePara.appendChild(websiteLink);","    infoPane.appendChild(websitePara);","    }","","    // Open the infoPane","    infoPane.classList.add(\"open\");","}"],"id":63}],[{"start":{"row":157,"column":69},"end":{"row":158,"column":0},"action":"insert","lines":["",""],"id":64},{"start":{"row":158,"column":0},"end":{"row":158,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":158,"column":4},"end":{"row":165,"column":1},"action":"insert","lines":["// Add the primary photo, if there is one","if (placeResult.photos != null) {","    let firstPhoto = placeResult.photos[0];","    let photo = document.createElement('img');","    photo.classList.add('hero');","    photo.src = firstPhoto.getUrl();","    infoPane.appendChild(photo);","}"],"id":65}],[{"start":{"row":0,"column":0},"end":{"row":195,"column":1},"action":"remove","lines":["let pos;","let map;","let bounds;","let infoWindow;","let currentInfoWindow;","let service;","let infoPane;","","function initMap() {","    // Initialize variables","    bounds = new google.maps.LatLngBounds();","    infoWindow = new google.maps.InfoWindow;","    /* TODO: Step 4A3: Add a generic sidebar */","    infoPane = document.getElementById('panel');","","    // Try HTML5 geolocation","    if (navigator.geolocation) {","        navigator.geolocation.getCurrentPosition(position => {","            pos = {","                lat: position.coords.latitude,","                lng: position.coords.longitude","            };","            map = new google.maps.Map(document.getElementById('map'), {","                center: pos,","                zoom: 15","            });","            bounds.extend(pos);","","            infoWindow.setPosition(pos);","            infoWindow.setContent('Location found.');","            infoWindow.open(map);","            map.setCenter(pos);","","            /* TODO: Step 3B2, Call the Places Nearby Search */","// Call Places Nearby Search on user's location","getNearbyPlaces(pos);","","        }, () => {","            // Browser supports geolocation, but user has denied permission","            handleLocationError(true, infoWindow);","        });","    } else {","        // Browser doesn't support geolocation","        handleLocationError(false, infoWindow);","    }","}","","// Handle a geolocation error","function handleLocationError(browserHasGeolocation, infoWindow) {","    // Set default location to Sydney, Australia","    pos = {","        lat: -33.856,","        lng: 151.215","    };","    map = new google.maps.Map(document.getElementById('map'), {","        center: pos,","        zoom: 15","    });","","    // Display an InfoWindow at the map center","    infoWindow.setPosition(pos);","    infoWindow.setContent(browserHasGeolocation ?","        'Geolocation permissions denied. Using default location.' :","        'Error: Your browser doesn\\'t support geolocation.');","    infoWindow.open(map);","    currentInfoWindow = infoWindow;","","    /* TODO: Step 3B3, Call the Places Nearby Search */","    // Call Places Nearby Search on the default location","getNearbyPlaces(pos);","}","/* END TODO: Step 2, Geolocate your user */","","// Perform a Places Nearby Search Request","function getNearbyPlaces(position) {","    let request = {","    location: position,","    rankBy: google.maps.places.RankBy.DISTANCE,","    keyword: 'gym'","    };","","    service = new google.maps.places.PlacesService(map);","    service.nearbySearch(request, nearbyCallback);","}","","// Handle the results (up to 20) of the Nearby Search","function nearbyCallback(results, status) {","    if (status == google.maps.places.PlacesServiceStatus.OK) {","    createMarkers(results);","    }","}","","/* TODO: Step 3C, Generate markers for search results */","// Set markers at the location of each place result","function createMarkers(places) {","    places.forEach(place => {","    let marker = new google.maps.Marker({","        position: place.geometry.location,","        map: map,","        title: place.name","    });","","    /* TODO: Step 4B: Add click listeners to the markers */","    ","    // Add click listener to each marker","google.maps.event.addListener(marker, 'click', () => {","    let request = {","    placeId: place.place_id,","    fields: ['name', 'formatted_address', 'geometry', 'rating',","        'website', 'photos']","    };","","    /* Only fetch the details of a place when the user clicks on a marker.","    * If we fetch the details for all place results as soon as we get","    * the search response, we will hit API rate limits. */","    service.getDetails(request, (placeResult, status) => {","    showDetails(placeResult, marker, status)","    });","});","","    // Adjust the map bounds to include the location of this marker","    bounds.extend(place.geometry.location);","    });","    /* Once all the markers have been placed, adjust the bounds of the map to","    * show all the markers within the visible area. */","    map.fitBounds(bounds);","}","","/* TODO: Step 4C: Show place details in an info window */","// Builds an InfoWindow to display details above the marker","function showDetails(placeResult, marker, status) {","    if (status == google.maps.places.PlacesServiceStatus.OK) {","    let placeInfowindow = new google.maps.InfoWindow();","    placeInfowindow.setContent('<div><strong>' + placeResult.name +","        '</strong><br>' + 'Rating: ' + placeResult.rating + '</div>');","    placeInfowindow.open(marker.map, marker);","    currentInfoWindow.close();","    currentInfoWindow = placeInfowindow;","    showPanel(placeResult);","    } else {","    console.log('showDetails failed: ' + status);","    }","}","","/* TODO: Step 4D: Load place details in a sidebar */","// Displays place details in a sidebar","function showPanel(placeResult) {","    // If infoPane is already open, close it","    if (infoPane.classList.contains(\"open\")) {","    infoPane.classList.remove(\"open\");","    }","","    // Clear the previous details","    while (infoPane.lastChild) {","    infoPane.removeChild(infoPane.lastChild);","    }","","    /* TODO: Step 4E: Display a Place Photo with the Place Details */","    // Add the primary photo, if there is one","if (placeResult.photos != null) {","    let firstPhoto = placeResult.photos[0];","    let photo = document.createElement('img');","    photo.classList.add('hero');","    photo.src = firstPhoto.getUrl();","    infoPane.appendChild(photo);","}","","    // Add place details with text formatting","    let name = document.createElement('h1');","    name.classList.add('place');","    name.textContent = placeResult.name;","    infoPane.appendChild(name);","    if (placeResult.rating != null) {","    let rating = document.createElement('p');","    rating.classList.add('details');","    rating.textContent = `Rating: ${placeResult.rating} \\u272e`;","    infoPane.appendChild(rating);","    }","    let address = document.createElement('p');","    address.classList.add('details');","    address.textContent = placeResult.formatted_address;","    infoPane.appendChild(address);","    if (placeResult.website) {","    let websitePara = document.createElement('p');","    let websiteLink = document.createElement('a');","    let websiteUrl = document.createTextNode(placeResult.website);","    websiteLink.appendChild(websiteUrl);","    websiteLink.title = placeResult.website;","    websiteLink.href = placeResult.website;","    websitePara.appendChild(websiteLink);","    infoPane.appendChild(websitePara);","    }","","    // Open the infoPane","    infoPane.classList.add(\"open\");","}"],"id":66},{"start":{"row":0,"column":0},"end":{"row":191,"column":5},"action":"insert","lines":[" /* Note: This example requires that you consent to location sharing when","     * prompted by your browser. If you see the error \"Geolocation permission","     * denied.\", it means you probably did not give permission for the browser * to locate you. */","    let pos;","    let map;","    let bounds;","    let infoWindow;","    let currentInfoWindow;","    let service;","    let infoPane;","    function initMap() {","      // Initialize variables","      bounds = new google.maps.LatLngBounds();","      infoWindow = new google.maps.InfoWindow;","      currentInfoWindow = infoWindow;","      /* TODO: Step 4A3: Add a generic sidebar */","      infoPane = document.getElementById('panel');","","      // Try HTML5 geolocation","      if (navigator.geolocation) {","        navigator.geolocation.getCurrentPosition(position => {","          pos = {","            lat: position.coords.latitude,","            lng: position.coords.longitude","          };","          map = new google.maps.Map(document.getElementById('map'), {","            center: pos,","            zoom: 15","          });","          bounds.extend(pos);","","          infoWindow.setPosition(pos);","          infoWindow.setContent('Location found.');","          infoWindow.open(map);","          map.setCenter(pos);","","          // Call Places Nearby Search on user's location","          getNearbyPlaces(pos);","        }, () => {","          // Browser supports geolocation, but user has denied permission","          handleLocationError(true, infoWindow);","        });","      } else {","        // Browser doesn't support geolocation","        handleLocationError(false, infoWindow);","      }","    }","","    // Handle a geolocation error","    function handleLocationError(browserHasGeolocation, infoWindow) {","      // Set default location to Sydney, Australia","      pos = { lat: -33.856, lng: 151.215 };","      map = new google.maps.Map(document.getElementById('map'), {","        center: pos,","        zoom: 15","      });","","      // Display an InfoWindow at the map center","      infoWindow.setPosition(pos);","      infoWindow.setContent(browserHasGeolocation ?","        'Geolocation permissions denied. Using default location.' :","        'Error: Your browser doesn\\'t support geolocation.');","      infoWindow.open(map);","      currentInfoWindow = infoWindow;","","      // Call Places Nearby Search on the default location","      getNearbyPlaces(pos);","    }","","    // Perform a Places Nearby Search Request","    function getNearbyPlaces(position) {","      let request = {","        location: position,","        rankBy: google.maps.places.RankBy.DISTANCE,","        keyword: 'sushi'","      };","","      service = new google.maps.places.PlacesService(map);","      service.nearbySearch(request, nearbyCallback);","    }","","    // Handle the results (up to 20) of the Nearby Search","    function nearbyCallback(results, status) {","      if (status == google.maps.places.PlacesServiceStatus.OK) {","        createMarkers(results);","      }","    }","","    // Set markers at the location of each place result","    function createMarkers(places) {","      places.forEach(place => {","        let marker = new google.maps.Marker({","          position: place.geometry.location,","          map: map,","          title: place.name","        });","","        /* TODO: Step 4B: Add click listeners to the markers */","        // Add click listener to each marker","        google.maps.event.addListener(marker, 'click', () => {","          let request = {","            placeId: place.place_id,","            fields: ['name', 'formatted_address', 'geometry', 'rating',","              'website', 'photos']","          };","","          /* Only fetch the details of a place when the user clicks on a marker.","           * If we fetch the details for all place results as soon as we get","           * the search response, we will hit API rate limits. */","          service.getDetails(request, (placeResult, status) => {","            showDetails(placeResult, marker, status)","          });","        });","","        // Adjust the map bounds to include the location of this marker","        bounds.extend(place.geometry.location);","      });","      /* Once all the markers have been placed, adjust the bounds of the map to","       * show all the markers within the visible area. */","      map.fitBounds(bounds);","    }","","    /* TODO: Step 4C: Show place details in an info window */","    // Builds an InfoWindow to display details above the marker","    function showDetails(placeResult, marker, status) {","      if (status == google.maps.places.PlacesServiceStatus.OK) {","        let placeInfowindow = new google.maps.InfoWindow();","        let rating = \"None\";","        if (placeResult.rating) rating = placeResult.rating;","        placeInfowindow.setContent('<div><strong>' + placeResult.name +","          '</strong><br>' + 'Rating: ' + rating + '</div>');","        placeInfowindow.open(marker.map, marker);","        currentInfoWindow.close();","        currentInfoWindow = placeInfowindow;","        showPanel(placeResult);","      } else {","        console.log('showDetails failed: ' + status);","      }","    }","","    /* TODO: Step 4D: Load place details in a sidebar */","    // Displays place details in a sidebar","    function showPanel(placeResult) {","      // If infoPane is already open, close it","      if (infoPane.classList.contains(\"open\")) {","        infoPane.classList.remove(\"open\");","      }","","      // Clear the previous details","      while (infoPane.lastChild) {","        infoPane.removeChild(infoPane.lastChild);","      }","","      /* TODO: Step 4E: Display a Place Photo with the Place Details */","      // Add the primary photo, if there is one","      if (placeResult.photos) {","        let firstPhoto = placeResult.photos[0];","        let photo = document.createElement('img');","        photo.classList.add('hero');","        photo.src = firstPhoto.getUrl();","        infoPane.appendChild(photo);","      }","","      // Add place details with text formatting","      let name = document.createElement('h1');","      name.classList.add('place');","      name.textContent = placeResult.name;","      infoPane.appendChild(name);","      if (placeResult.rating) {","        let rating = document.createElement('p');","        rating.classList.add('details');","        rating.textContent = `Rating: ${placeResult.rating} \\u272e`;","        infoPane.appendChild(rating);","      }","      let address = document.createElement('p');","      address.classList.add('details');","      address.textContent = placeResult.formatted_address;","      infoPane.appendChild(address);","      if (placeResult.website) {","        let websitePara = document.createElement('p');","        let websiteLink = document.createElement('a');","        let websiteUrl = document.createTextNode(placeResult.website);","        websiteLink.appendChild(websiteUrl);","        websiteLink.title = placeResult.website;","        websiteLink.href = placeResult.website;","        websitePara.appendChild(websiteLink);","        infoPane.appendChild(websitePara);","      }","","      // Open the infoPane","      infoPane.classList.add(\"open\");","    }"]}],[{"start":{"row":54,"column":15},"end":{"row":54,"column":16},"action":"remove","lines":["5"],"id":67}],[{"start":{"row":54,"column":15},"end":{"row":54,"column":16},"action":"insert","lines":["6"],"id":68}],[{"start":{"row":74,"column":18},"end":{"row":74,"column":23},"action":"remove","lines":["sushi"],"id":69},{"start":{"row":74,"column":18},"end":{"row":74,"column":19},"action":"insert","lines":["P"]},{"start":{"row":74,"column":19},"end":{"row":74,"column":20},"action":"insert","lines":["O"]}],[{"start":{"row":74,"column":19},"end":{"row":74,"column":20},"action":"remove","lines":["O"],"id":70}],[{"start":{"row":74,"column":19},"end":{"row":74,"column":20},"action":"insert","lines":["u"],"id":71},{"start":{"row":74,"column":20},"end":{"row":74,"column":21},"action":"insert","lines":["r"]},{"start":{"row":74,"column":21},"end":{"row":74,"column":22},"action":"insert","lines":["e"]},{"start":{"row":74,"column":22},"end":{"row":74,"column":23},"action":"insert","lines":["f"]},{"start":{"row":74,"column":23},"end":{"row":74,"column":24},"action":"insert","lines":["g"]}],[{"start":{"row":74,"column":23},"end":{"row":74,"column":24},"action":"remove","lines":["g"],"id":72},{"start":{"row":74,"column":22},"end":{"row":74,"column":23},"action":"remove","lines":["f"]}],[{"start":{"row":74,"column":22},"end":{"row":74,"column":23},"action":"insert","lines":[" "],"id":73},{"start":{"row":74,"column":23},"end":{"row":74,"column":24},"action":"insert","lines":["g"]},{"start":{"row":74,"column":24},"end":{"row":74,"column":25},"action":"insert","lines":["y"]},{"start":{"row":74,"column":25},"end":{"row":74,"column":26},"action":"insert","lines":["m"]}],[{"start":{"row":74,"column":18},"end":{"row":74,"column":19},"action":"remove","lines":["P"],"id":74}],[{"start":{"row":74,"column":18},"end":{"row":74,"column":19},"action":"insert","lines":["p"],"id":75}],[{"start":{"row":27,"column":19},"end":{"row":27,"column":20},"action":"remove","lines":["5"],"id":76}],[{"start":{"row":27,"column":19},"end":{"row":27,"column":20},"action":"insert","lines":["6"],"id":77}]]},"ace":{"folds":[],"scrolltop":600,"scrollleft":0,"selection":{"start":{"row":66,"column":27},"end":{"row":67,"column":5},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1587585015722,"hash":"dd8793c987ff51d85695c38cd0e7a9777e53bb49"}